{"version":3,"file":"component---src-pages-index-jsx-6b0dee2ee5ada18166a9.js","mappings":"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","sources":["webpack://ivannikov.pro-website/./src/screens/ScreenPortfolio.jsx","webpack://ivannikov.pro-website/./src/assets/images/blog/1.png","webpack://ivannikov.pro-website/./src/assets/images/blog/1@2x.png","webpack://ivannikov.pro-website/./src/assets/images/blog/2.png","webpack://ivannikov.pro-website/./src/assets/images/blog/2@2x.png","webpack://ivannikov.pro-website/./src/assets/images/blog/3.png","webpack://ivannikov.pro-website/./src/assets/images/blog/3@2x.png","webpack://ivannikov.pro-website/./src/assets/images/blog/4.png","webpack://ivannikov.pro-website/./src/assets/images/blog/4@2x.png","webpack://ivannikov.pro-website/./src/assets/images/blog/5.png","webpack://ivannikov.pro-website/./src/assets/images/blog/5@2x.png","webpack://ivannikov.pro-website/./src/pages/index.jsx"],"sourcesContent":["import './ScreenPortfolio.scss';\n\nimport React, { useState, useEffect, } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { GradientRound1, GradientRound2 } from '../components/elements/GradientRound';\n\nimport CommonButton from '../components/CommonButton';\nimport InnerLink from '../components/InnerLink';\nimport { Link, } from '../components/Link';\n\nimport { portfolioTags, portfolioList, } from '../data/portfolio';\n\n\n\nconst showLimit = 8; // 2, 5, 8, +3\n\nexport default function ScreenPortfolio(props) {\n  const { i18n, t, } = useTranslation('portfolio');\n  const [currentTag, setCurrentTag] = useState({ id: 'all', name: 'All', });\n\n  const [posts, setPosts] = useState(portfolioList.slice(0, showLimit));\n  useEffect(() => {\n    const posts = portfolioList.filter((item) => item.tags.includes(currentTag.id));\n    setPosts(posts.slice(0, showLimit));\n  }, [currentTag]);\n\n  return (\n    <section id='section-portfolio' className='section-portfolio'>\n      <GradientRound1 />\n      <GradientRound2 />\n      <br />\n      <div className='container'>\n        <h2 className='title'>{t('Portfolio')}</h2>\n        <p className='desc'>{t('portfolioDescription')}</p>\n        <div className='portfolio__tabs'>\n          {portfolioTags.map((item) =>\n            <CommonButton\n              key={item.id}\n              className='portfolio__tab'\n              size='small'\n              variant={currentTag.id === item.id ? 'gradient' : 'base'}\n              active={currentTag.id === item.id ? true : false}\n              onClick={() => setCurrentTag(item)}\n            >\n              {t(item.name)}\n            </CommonButton>\n          )}\n        </div>\n\n        <div className='row portfolio'>\n          {posts.slice(0, 1).map((item) => {\n            return (\n              <div\n                key={item.id}\n                className='col-12 col-lg-8'\n              >\n                <div className='portfolio'>\n                  <div className='portfolio-item portfolio-item__big'>\n                    {item.img && <span className='portfolio-item__img'>\n                      {item.img(item, i18n)}\n                    </span>}\n\n                    <div className='portfolio-content'>\n                      {/*<div className='portfolio-item__date'>\n                        <span>{new Date(item.date).toLocaleDateString(i18n.language)}</span>\n                      </div>*/}\n                      {item.icon && <span className='portfolio-item__icon'>\n                        <img\n                          alt={item.title[i18n.language]}\n                          title={item.title[i18n.language]}\n                          src={item.icon}\n                        />\n                      </span>}\n                      <div className='portfolio-item__title'>{item.title[i18n.language]}</div>\n                      <div className='portfolio-item__desc'>\n                        {item.desc[i18n.language]}\n                      </div>\n                      <div className='portfolio-item__link'>\n                        <InnerLink\n                          to={item.link}\n                          text={t('Read more')}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {posts.slice(1).map((item) => {\n            return (\n              <div\n                key={item.id}\n                className='col-12 col-lg-4'\n              >\n                <div className='portfolio'>\n                  <div className='portfolio-item'>\n                    {item.img && <span className='portfolio-item__img'>\n                      {item.img(item, i18n)}\n                    </span>}\n                    {/*<div className='portfolio-item__date'>\n                      <span>{new Date(item.date).toLocaleDateString(i18n.language)}</span>\n                    </div>*/}\n                    <div className='portfolio-item__title'>{item.title[i18n.language]}</div>\n                    <div className='portfolio-item__desc'>\n                      {item.desc[i18n.language]}\n                    </div>\n                    <div className='portfolio-item__link'>\n                      <InnerLink\n                        to={item.link}\n                        text={t('Read more')}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        <div\n          className='portfolio__more'\n        //className='portfolio__more d-md-none'\n        >\n          <Link to='/portfolio'>\n            <CommonButton\n              className=''\n              size='full'\n              variant='gradient'\n            >\n              {t('More')}\n            </CommonButton>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n","export default __webpack_public_path__ + \"static/1-4d65268546e2f6c04badb94e62350dc7.png\";","export default __webpack_public_path__ + \"static/1@2x-a382e9fb48f5d76fea7b1b642af06a36.png\";","export default __webpack_public_path__ + \"static/2-d699db30d9a3df1f1878b10f6b748064.png\";","export default __webpack_public_path__ + \"static/2@2x-09e4a50364d19ab7bfa84a45b5cbd53e.png\";","export default __webpack_public_path__ + \"static/3-ed75a7fabe5e8927b36a73f2dda44e4e.png\";","export default __webpack_public_path__ + \"static/3@2x-aeb4dd70ab981456f00c9ddaefa0fe30.png\";","export default __webpack_public_path__ + \"static/4-2cb1c3c2ddeb7d4070fe8cdeac67bb2f.png\";","export default __webpack_public_path__ + \"static/4@2x-4e322c2658fedf8b8fba10284831e29d.png\";","export default __webpack_public_path__ + \"static/5-fd436fafcd8361b6c3791fef00eab30c.png\";","export default __webpack_public_path__ + \"static/5@2x-0b505800d15bbe98e7882cd09b54c11f.png\";","import './index.scss';\n\nimport React, { useContext, } from 'react';\nimport { useTranslation, } from 'react-i18next';\n\nimport { ThemeContext, } from '../theme';\nimport Page from '../components/Page';\nimport ScreenStart from '../screens/ScreenStart';\nimport ScreenPortfolio from '../screens/ScreenPortfolio';\nimport ScreenProjects from '../screens/ScreenProjects';\nimport ScreenBlog from '../screens/ScreenBlog';\n\n\n\nexport default function IndexPage() {\n  const { theme, } = useContext(ThemeContext);\n  //const { locale, defaultLang, config, } = useLocalization();\n  const { i18n, t, } = useTranslation('translation');\n\n  const imagePrefix = \"https://ivannikov.pro\";\n  const imageUrl = imagePrefix + `/ivannikov.pro_${i18n.language}.jpg`;\n\n  return (\n    <Page\n      keywords={t('keywordsList')}\n      meta={[\n        { name: 'image', content: imageUrl, },\n        { name: 'og:image', property: 'og:image', content: imageUrl, },\n        { name: 'twitter:image', property: 'twitter:image', content: imageUrl, },\n      ]}\n    >\n      <div id={`front ${theme}`} style={{ minHeight: '95vh', }}>\n        <main className='main'>\n          <ScreenStart\n            preTitle={t('Aleksandr Ivannikov')}\n            title={t('ProjectSlogan')}\n            description={t('Introduction')}\n          //descriptionComponent={}\n          //imageComponent={}\n          />\n\n          {/*<ScreenProjects />\n          <ScreenBlog />*/}\n          <ScreenPortfolio />\n        </main>\n      </div>\n    </Page>\n  );\n}\n\n\n/*\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: 'MMMM DD, YYYY')\n        description\n\n        thumbnail {\n          childImageSharp {\n            fixed(width: 1200) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n        \n      }\n    }   \n  }\n`;\n*/"],"names":["showLimit","ScreenPortfolio","props","i18n","t","useTranslation","currentTag","setCurrentTag","useState","id","name","posts","setPosts","portfolioList","slice","useEffect","filter","item","tags","includes","React","className","GradientRound1","GradientRound2","portfolioTags","map","CommonButton","key","size","variant","active","onClick","img","icon","alt","title","language","src","desc","InnerLink","to","link","text","Link","IndexPage","theme","useContext","ThemeContext","imageUrl","Page","keywords","meta","content","property","style","minHeight","ScreenStart","preTitle","description"],"sourceRoot":""}